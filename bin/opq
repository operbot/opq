#!/usr/bin/env python3
# This file is placed in the Public Domain.


"object programming queue"


import os
import readline
import sys
import termios
import time
import traceback


from opq.clients import Client
from opq.command import Command, command, scan
from opq.handler import Handler
from opq.listens import Listens
from opq.message import Message
from opq.objects import update
from opq.threads import launch
from opq.utility import wait


try:
    sys.path.insert(0, ".")
except Exception as ex:
    traceback.print_exception(type(ex), ex, ex.__traceback__, file=sys.stderr)


class CLI(Client):

    def announce(self, txt):
        pass

    def raw(self, txt):
        print(txt)
        sys.stdout.flush()


class Console(CLI):

    def handle(self, event):
        CLI.handle(self, event)

    def poll(self):
        event = Message()
        event.orig = repr(self)
        event.txt = input("> ")
        event.parse(event.txt)
        return event


def daemon():
    pid = os.fork()
    if pid != 0:
        os._exit(0)
    os.setsid()
    os.umask(0)
    sis = open("/dev/null", 'r')
    os.dup2(sis.fileno(), sys.stdin.fileno())
    sos = open("/dev/null", 'a+')
    ses = open("/dev/null", 'a+')
    os.dup2(sos.fileno(), sys.stdout.fileno())
    os.dup2(ses.fileno(), sys.stderr.fileno())


def getattr():
    return termios.tcgetattr(sys.stdin.fileno())


def setattr(old):
    termios.tcsetattr(sys.stdin.fileno(), termios.TCSADRAIN, old)


def waiter():
    got = []
    for ex in Handler.errors:
        traceback.print_exception(type(ex), ex, ex.__traceback__)
        got.append(ex)
    for exc in got:
        Handler.errors.remove(exc)


def wrap(func, waiter=None):
    old = getattr()
    try:
        func()
    except (EOFError, KeyboardInterrupt):
        print("")
    finally:
        setattr(old)
        if waiter:
            waiter()
      

def main():
    cfg = Message()
    cfg.parse(" ".join(sys.argv[1:]))
    dowait = False
    if os.path.exists("modules"):
        sys.path.insert(0, ".")
        from modules.storage import Storage
        Storage.workdir = os.path.expanduser("~/.opq")
        from modules import cmd, dbg, irc, log, rss, sts, tdo
        scan(cmd)
        scan(dbg)
        scan(irc)
        scan(log)
        scan(rss)
        scan(sts)
        scan(tdo)
    if cfg.txt:
        cli = CLI()
        command(cli, cfg.otxt)
    elif "d" in cfg.opts:
        daemon()
        dowait = True
    elif "c" in cfg.opts:
        date = time.ctime(time.time()).replace("  ", " ")
        print(f"OPQ started {date}")
        csl = Console()
        launch(csl.loop)
        dowait = True
    if dowait:
        irc.init()
        rss.init()
        wait()


wrap(main, waiter)
