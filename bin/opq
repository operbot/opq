#!/usr/bin/env python3
# This file is placed in the Public Domain.


"object programming bot"


import os
import sys
import termios
import time
import traceback


sys.path.insert(0, os.getcwd())


from opq.default import Default
from opq.message import Message
from opq.objects import update
from opq.handler import Handler
from opq.modules import cmd, fnd, irc, rss, tdo
from opq.runtime import launch
from opq.storage import Storage
from opq.utility import wait


Cfg = Default()
Storage.workdir = os.path.expanduser("~/.opq")


class CLI(Handler):

    def __init__(self):
        Handler.__init__(self)
        self.register("command", self.dispatch)

    def announce(self, txt):
        pass

    def raw(self, txt):
        print(txt)
        sys.stdout.flush()


class Console(CLI):

    def handle(self, event):
        self.dispatch(event)
        #event.wait()

    def poll(self):
        event = Message()
        event.txt = input("> ")
        return event


def waiter():
    got = []
    for ex in Handler.errors:
        traceback.print_exception(type(ex), ex, ex.__traceback__)
        got.append(ex)
    for exc in got:
        Handler.errors.remove(exc)


def wrap(func):
    fds = sys.stdin.fileno()
    gotterm = True
    try:
        old = termios.tcgetattr(fds)
    except termios.error:
        gotterm = False
    try:
        func()
    except (EOFError, KeyboardInterrupt):
        print("")
    finally:
        if gotterm:
            termios.tcsetattr(fds, termios.TCSADRAIN, old)
        waiter()


def main():
    e = Message()
    e.type = "command"
    e.parse(" ".join(sys.argv[1:]))
    cli = CLI()
    cli.scan(cmd)
    cli.scan(fnd)
    cli.scan(irc)
    cli.scan(rss)
    cli.scan(tdo)
    if e.txt:
        cli.handle(e)
    elif "c" in e.opts:
        date = time.ctime(time.time()).replace("  ", " ")
        print(f"OPQ started {date}")
        irc.init()
        rss.init()
        csl = Console()
        csl.clone(cli)
        launch(csl.start)
        wait(waiter)


wrap(main)
